<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="Microsoft.Midi.Settings.Views.FirstRunExperiencePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.Midi.Settings.Views"
    xmlns:midi2="using:Microsoft.Windows.Devices.Midi2"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:helpers="using:Microsoft.Midi.Settings.Helpers"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid>

        <ContentDialog x:Name="Dialog_FirstRunSetup"
                       PrimaryButtonText="OK" 
                       IsPrimaryButtonEnabled="True"
                       PrimaryButtonCommand="{x:Bind ViewModel.CompleteFirstRunSetupCommand}"
                       CloseButtonText="Cancel">
            
            <ContentDialog.Resources>
                <x:Double x:Key="ContentDialogMaxWidth">800</x:Double>
                <x:Double x:Key="ContentDialogMaxHeight">800</x:Double>
            </ContentDialog.Resources>

            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Set up Windows MIDI Services" 
                           Style="{StaticResource DialogHeaderTextBlockStyle}"
                           Margin="13, 9, 13, 13"/>

                    <TextBlock TextWrapping="WrapWholeWords" 
                           Text="Many MIDI customizations are stored in a portable configuration file. These include customized endpoint properties like the name, definitions for persistent loopback endpoints, and your Network MIDI host and client reconnections."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>

                    <ToggleSwitch Margin="13"
                              IsEnabled="True"
                              IsOn="{x:Bind ViewModel.CreateConfigurationFile, Mode=TwoWay}"
                              Header="Create default configuration file." 
                              />

                    <!-- todo: give an option to name it here? -->

                    <TextBlock TextWrapping="WrapWholeWords" 
                           Text="Some applications and utilities, especially those on the web, rely on having a known loopback endpoint available. This requires a configuration file to store the loopback endpoint information."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>

                    <ToggleSwitch Margin="13"
                              IsEnabled="{x:Bind ViewModel.CanPersistChanges, Mode=OneWay}"
                              IsOn="{x:Bind ViewModel.CreateDefaultLoopbackEndpoints, Mode=TwoWay}"
                              Header="Create default loopback endpoints." 
                              />

                    <TextBlock TextWrapping="WrapWholeWords" 
                           Text="By default, the MIDI Service is set to start only when the first MIDI connection is made by an app. This ensures Windows startup time is not impacted for those who do not use MIDI. But the first time a MIDI connection is made, it can take several seconds."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>

                    <TextBlock TextWrapping="WrapWholeWords" 
                           Text="If you use MIDI frequently, we recommend changing the service to start automatically with Windows, so you never have to wait when making a connection. This requires Administrator permissions to set."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>

                    <ToggleSwitch Margin="13"
                              IsEnabled="{x:Bind ViewModel.CreateConfigurationFile, Mode=OneWay}"
                              IsOn="{x:Bind ViewModel.SetServiceToAutoStart, Mode=TwoWay}"
                              Header="Set MIDI Service to auto-start with Windows" 
                              />
                </StackPanel>
            </ScrollViewer>
            
        </ContentDialog>
        
        <!--
        <ContentDialog x:Name="Dialog_CreateConfigFile"
                       PrimaryButtonText="OK" 
                       IsPrimaryButtonEnabled="{x:Bind ViewModel.ConfigFileExists, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
                       CloseButtonText="Cancel"
                       PrimaryButtonCommand="{x:Bind ViewModel.CreateConfigFileCommand}"
                       >

            <StackPanel Orientation="Vertical" >
                <TextBlock Text="Create New MIDI Config File" 
                           Style="{StaticResource DialogHeaderTextBlockStyle}"
                           Margin="13, 9, 13, 13"/>

                <TextBlock TextWrapping="WrapWholeWords" 
                           Text="Many MIDI customizations are stored in a portable configuration file. These include customized endpoint properties like the name, definitions for persistent loopback endpoints, and your Network MIDI host and client reconnections."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>

                <TextBlock TextWrapping="WrapWholeWords" 
                           Text="You may want to differentiate between home studio and live performance configurations, and have separate configuration files for each. Or, to keep things simple, just have one configuration file. You can create new configuration files or manage existing ones at any time."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>

                <TextBlock TextWrapping="WrapWholeWords" 
                           Text="Please provide a name for your first new MIDI configuration, or accept the default."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>

                <TextBox Header="Configuration Name" 
                         Text="{x:Bind ViewModel.ConfigName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         MaxLength="50"
                         Margin="13"/>


                <Grid Margin="11" Padding="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" 
                               Grid.Column="0" 
                               Text="File to be created:" 
                               Style="{StaticResource SmallPropertyLabel}"/>

                    <TextBlock Grid.Row="0"
                               Grid.Column="1"
                               Text="{x:Bind ViewModel.ConfigFileName, Mode=OneWay}" 
                               Style="{StaticResource SmallEmphasizedPropertyValue}" 
                               />

                    <TextBlock Grid.Row="1" 
                               Grid.Column="1"
                               Text="Config exists. Please choose a different name."
                               Style="{StaticResource SmallEmphasizedPropertyValue}"
                               Visibility="{x:Bind ViewModel.ConfigFileExists, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                               Foreground="OrangeRed"/>

                    <TextBlock Grid.Row="1" 
                               Grid.Column="1"
                               Text="Valid configuration name."
                               Style="{StaticResource SmallEmphasizedPropertyValue}"
                               Visibility="{x:Bind ViewModel.ConfigFileExists, Converter={StaticResource BooleanToInverseVisibilityConverter}, Mode=OneWay}"
                               Foreground="Green"/>


                    <TextBlock Grid.Row="2" 
                               Grid.Column="0" 
                               Text="In Location:" 
                               Style="{StaticResource SmallPropertyLabel}"/>
                    
                    <TextBlock Grid.Row="2" 
                               Grid.Column="1" 
                               Text="{x:Bind ViewModel.ConfigFilesLocation, Mode=OneWay}" 
                               Style="{StaticResource SmallEmphasizedPropertyValue}"/>
                </Grid>

            </StackPanel>
        </ContentDialog>

        <ContentDialog x:Name="Dialog_CreateDefaultLoopback"
                       PrimaryButtonText="OK" 
                       CloseButtonText="Cancel"
                       PrimaryButtonCommand="{x:Bind ViewModel.CreateStandardLoopbackCommand}">
            
            <StackPanel Orientation="Vertical" >
                <TextBlock Text="Create Default Loopback" 
                           Style="{StaticResource DialogHeaderTextBlockStyle}"
                           Margin="13, 9, 13, 13"/>

                <TextBlock TextWrapping="WrapWholeWords" 
                           Text="Some applications and utilities, especially those on the web, rely on having a known loopback endpoint available. Clock OK to create the standard loopback endpoint pair."
                           Style="{StaticResource DialogDescriptionTextBlockStyle}" 
                           Margin="13"/>
            </StackPanel>
        </ContentDialog>

        
        <ContentDialog x:Name="Dialog_SetServiceStartup"
                        PrimaryButtonText="OK" 
                        IsPrimaryButtonEnabled="True"
                        CloseButtonText="Cancel">
            <TextBlock Text="Set service startup" />

        </ContentDialog>

-->
    </Grid>
</Page>
