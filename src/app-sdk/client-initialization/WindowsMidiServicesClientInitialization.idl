// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://aka.ms/midi
// ============================================================================

import "unknwn.idl";

import "oaidl.idl";
import "ocidl.idl";


typedef enum
{
    Platform_x64 = 1,
//    Platform_Arm64 = 2,
//    Platform_Arm64EC = 3,
    Platform_Arm64X = 4,
} MidiAppSDKPlatform;


[
    object,
    local,
    uuid(8087b303-d551-bce2-1ead-a2500d50c580),
    helpstring("Windows MIDI Services Desktop App SDK Initializer interface")
]
interface IMidiClientInitializer : IUnknown
{
    // ensures the service is running and also starts up WinRT activation redirection
    [helpstring("Initializes the SDK runtime, and set up WinRT type activation detours")]
    HRESULT Initialize();


    // changed from a struct to individual parameters so that .NET 8+ COM source generation
    // can actually use the function without a bunch of custom COM marshalling code
    [helpstring("Returns the version of the SDK this component was activated from. If provided, strings must be freed after use.")]
    HRESULT GetInstalledWindowsMidiServicesSdkVersion(
        [out, optional] MidiAppSDKPlatform* buildPlatform,
        [out, optional] DWORD* versionMajor,
        [out, optional] DWORD* versionMinor,
        [out, optional] DWORD* versionRevision,

        [out, optional] DWORD* versionDateNumber,
        [out, optional] DWORD* versionTimeNumber,

        [out, string, optional] LPWSTR *buildSource,
        [out, string, optional] LPWSTR *versionName,
        [out, string, optional] LPWSTR *versionFullString
        );

    // demand-starts the service if present
    [helpstring("Demand-starts the Windows MIDI Service if it isn't already running")]
    HRESULT EnsureServiceAvailable();

    // this cleans up WinRT type activation redirection
    [helpstring("Shuts down the SDK, and stop redirecting WinRT type activation")]
    HRESULT Shutdown();

    // TODO: Method to check service version as well

};


[
    uuid(abacab11-1984-5150-0812-ac8675309b04),
    version(1.0),
    helpstring("Windows MIDI Services Desktop App SDK Initialization type library")
]
library WindowsMidiServicesClientInitializationLib
{
    importlib("stdole2.tlb");

    [
        uuid(c3263827-c3b0-bdbd-2500-ce63a3f3f2c3), 
        version(1.0),
        helpstring("Windows MIDI Services Desktop App SDK Initializer class")
    ]
    coclass MidiClientInitializer
    {
        [default] interface IMidiClientInitializer;
    }
};

