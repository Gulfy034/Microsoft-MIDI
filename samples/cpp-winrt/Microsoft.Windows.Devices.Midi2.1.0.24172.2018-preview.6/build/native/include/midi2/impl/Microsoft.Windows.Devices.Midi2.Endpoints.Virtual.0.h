// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_0_H
#define WINRT_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_0_H
WINRT_EXPORT namespace winrt::Microsoft::Windows::Devices::Midi2
{
    struct MidiDeclaredDeviceIdentity;
    struct MidiDeclaredEndpointInfo;
    struct MidiEndpointUserSuppliedInfo;
    struct MidiFunctionBlock;
    enum class MidiProtocol : int32_t;
}
WINRT_EXPORT namespace winrt::Windows::Foundation
{
    struct EventRegistrationToken;
    template <typename TSender, typename TResult> struct WINRT_IMPL_EMPTY_BASES TypedEventHandler;
}
WINRT_EXPORT namespace winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual
{
    struct IMidiStreamConfigRequestReceivedEventArgs;
    struct IMidiVirtualDevice;
    struct IMidiVirtualDeviceCreationConfig;
    struct IMidiVirtualDeviceCreationConfigFactory;
    struct IMidiVirtualDeviceManager;
    struct IMidiVirtualDeviceManagerStatics;
    struct MidiStreamConfigRequestReceivedEventArgs;
    struct MidiVirtualDevice;
    struct MidiVirtualDeviceCreationConfig;
    struct MidiVirtualDeviceManager;
    struct MidiStreamConfigRequestedSettings;
}
namespace winrt::impl
{
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiStreamConfigRequestReceivedEventArgs>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfig>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfigFactory>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManager>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManagerStatics>{ using type = interface_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestReceivedEventArgs>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDevice>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDeviceCreationConfig>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDeviceManager>{ using type = class_category; };
    template <> struct category<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestedSettings>{ using type = struct_category<uint8_t, uint8_t, winrt::Microsoft::Windows::Devices::Midi2::MidiProtocol, bool, bool>; };
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestReceivedEventArgs> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.MidiStreamConfigRequestReceivedEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDevice> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.MidiVirtualDevice";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDeviceCreationConfig> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.MidiVirtualDeviceCreationConfig";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDeviceManager> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.MidiVirtualDeviceManager";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestedSettings> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.MidiStreamConfigRequestedSettings";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiStreamConfigRequestReceivedEventArgs> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.IMidiStreamConfigRequestReceivedEventArgs";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.IMidiVirtualDevice";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfig> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.IMidiVirtualDeviceCreationConfig";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfigFactory> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.IMidiVirtualDeviceCreationConfigFactory";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManager> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.IMidiVirtualDeviceManager";
    template <> inline constexpr auto& name_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManagerStatics> = L"Microsoft.Windows.Devices.Midi2.Endpoints.Virtual.IMidiVirtualDeviceManagerStatics";
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiStreamConfigRequestReceivedEventArgs>{ 0x95E66544,0x7629,0x50AF,{ 0x9E,0xEE,0x0B,0x10,0x99,0x40,0x8E,0xD6 } }; // 95E66544-7629-50AF-9EEE-0B1099408ED6
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice>{ 0x6C667B8A,0x8A6F,0x59EC,{ 0xAB,0x80,0x25,0xF6,0xE5,0x62,0x93,0x4F } }; // 6C667B8A-8A6F-59EC-AB80-25F6E562934F
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfig>{ 0xF6B40477,0x006F,0x575B,{ 0xBE,0xEA,0xFD,0x72,0x9E,0x84,0xDD,0xF7 } }; // F6B40477-006F-575B-BEEA-FD729E84DDF7
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfigFactory>{ 0x6B3BFE63,0x5C8F,0x57D8,{ 0x8C,0xBA,0x20,0x8C,0x93,0x8F,0x08,0x34 } }; // 6B3BFE63-5C8F-57D8-8CBA-208C938F0834
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManager>{ 0x4235E62B,0xDF65,0x5B6C,{ 0x93,0x0F,0x64,0x0D,0xA2,0xF5,0x64,0x9C } }; // 4235E62B-DF65-5B6C-930F-640DA2F5649C
    template <> inline constexpr guid guid_v<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManagerStatics>{ 0xA3C905C1,0x56B5,0x58CE,{ 0xAD,0x79,0x82,0x66,0xE5,0x0A,0x1C,0x0C } }; // A3C905C1-56B5-58CE-AD79-8266E50A1C0C
    template <> struct default_interface<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestReceivedEventArgs>{ using type = winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiStreamConfigRequestReceivedEventArgs; };
    template <> struct default_interface<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDevice>{ using type = winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice; };
    template <> struct default_interface<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDeviceCreationConfig>{ using type = winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfig; };
    template <> struct default_interface<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDeviceManager>{ using type = winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManager; };
    template <> struct abi<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiStreamConfigRequestReceivedEventArgs>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Timestamp(uint64_t*) noexcept = 0;
            virtual int32_t __stdcall get_PreferredMidiProtocol(int32_t*) noexcept = 0;
            virtual int32_t __stdcall get_RequestEndpointTransmitJitterReductionTimestamps(bool*) noexcept = 0;
            virtual int32_t __stdcall get_RequestEndpointReceiveJitterReductionTimestamps(bool*) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_DeviceEndpointDeviceId(void**) noexcept = 0;
            virtual int32_t __stdcall get_FunctionBlocks(void**) noexcept = 0;
            virtual int32_t __stdcall UpdateFunctionBlock(void*, bool*) noexcept = 0;
            virtual int32_t __stdcall UpdateEndpointName(void*, bool*) noexcept = 0;
            virtual int32_t __stdcall get_SuppressHandledMessages(bool*) noexcept = 0;
            virtual int32_t __stdcall put_SuppressHandledMessages(bool) noexcept = 0;
            virtual int32_t __stdcall add_StreamConfigRequestReceived(void*, winrt::event_token*) noexcept = 0;
            virtual int32_t __stdcall remove_StreamConfigRequestReceived(winrt::event_token) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfig>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_Name(void**) noexcept = 0;
            virtual int32_t __stdcall put_Name(void*) noexcept = 0;
            virtual int32_t __stdcall get_Description(void**) noexcept = 0;
            virtual int32_t __stdcall put_Description(void*) noexcept = 0;
            virtual int32_t __stdcall get_Manufacturer(void**) noexcept = 0;
            virtual int32_t __stdcall put_Manufacturer(void*) noexcept = 0;
            virtual int32_t __stdcall get_DeclaredDeviceIdentity(struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredDeviceIdentity*) noexcept = 0;
            virtual int32_t __stdcall put_DeclaredDeviceIdentity(struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredDeviceIdentity) noexcept = 0;
            virtual int32_t __stdcall get_DeclaredEndpointInfo(struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredEndpointInfo*) noexcept = 0;
            virtual int32_t __stdcall put_DeclaredEndpointInfo(struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredEndpointInfo) noexcept = 0;
            virtual int32_t __stdcall get_UserSuppliedInfo(struct struct_Microsoft_Windows_Devices_Midi2_MidiEndpointUserSuppliedInfo*) noexcept = 0;
            virtual int32_t __stdcall put_UserSuppliedInfo(struct struct_Microsoft_Windows_Devices_Midi2_MidiEndpointUserSuppliedInfo) noexcept = 0;
            virtual int32_t __stdcall get_FunctionBlocks(void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfigFactory>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void*, void*, struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredEndpointInfo, void**) noexcept = 0;
            virtual int32_t __stdcall CreateInstance2(void*, void*, void*, struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredEndpointInfo, struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredDeviceIdentity, void**) noexcept = 0;
            virtual int32_t __stdcall CreateInstance3(void*, void*, void*, struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredEndpointInfo, struct struct_Microsoft_Windows_Devices_Midi2_MidiDeclaredDeviceIdentity, struct struct_Microsoft_Windows_Devices_Midi2_MidiEndpointUserSuppliedInfo, void**) noexcept = 0;
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManager>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
        };
    };
    template <> struct abi<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManagerStatics>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall get_IsTransportAvailable(bool*) noexcept = 0;
            virtual int32_t __stdcall get_AbstractionId(winrt::guid*) noexcept = 0;
            virtual int32_t __stdcall CreateVirtualDevice(void*, void**) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiStreamConfigRequestReceivedEventArgs
    {
        [[nodiscard]] auto Timestamp() const;
        [[nodiscard]] auto PreferredMidiProtocol() const;
        [[nodiscard]] auto RequestEndpointTransmitJitterReductionTimestamps() const;
        [[nodiscard]] auto RequestEndpointReceiveJitterReductionTimestamps() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiStreamConfigRequestReceivedEventArgs>
    {
        template <typename D> using type = consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiStreamConfigRequestReceivedEventArgs<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDevice
    {
        [[nodiscard]] auto DeviceEndpointDeviceId() const;
        [[nodiscard]] auto FunctionBlocks() const;
        auto UpdateFunctionBlock(winrt::Microsoft::Windows::Devices::Midi2::MidiFunctionBlock const& block) const;
        auto UpdateEndpointName(param::hstring const& name) const;
        [[nodiscard]] auto SuppressHandledMessages() const;
        auto SuppressHandledMessages(bool value) const;
        auto StreamConfigRequestReceived(winrt::Windows::Foundation::TypedEventHandler<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDevice, winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestReceivedEventArgs> const& handler) const;
        using StreamConfigRequestReceived_revoker = impl::event_revoker<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice, &impl::abi_t<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice>::remove_StreamConfigRequestReceived>;
        [[nodiscard]] auto StreamConfigRequestReceived(auto_revoke_t, winrt::Windows::Foundation::TypedEventHandler<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDevice, winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestReceivedEventArgs> const& handler) const;
        auto StreamConfigRequestReceived(winrt::event_token const& token) const noexcept;
    };
    template <> struct consume<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDevice>
    {
        template <typename D> using type = consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDevice<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceCreationConfig
    {
        [[nodiscard]] auto Name() const;
        auto Name(param::hstring const& value) const;
        [[nodiscard]] auto Description() const;
        auto Description(param::hstring const& value) const;
        [[nodiscard]] auto Manufacturer() const;
        auto Manufacturer(param::hstring const& value) const;
        [[nodiscard]] auto DeclaredDeviceIdentity() const;
        auto DeclaredDeviceIdentity(winrt::Microsoft::Windows::Devices::Midi2::MidiDeclaredDeviceIdentity const& value) const;
        [[nodiscard]] auto DeclaredEndpointInfo() const;
        auto DeclaredEndpointInfo(winrt::Microsoft::Windows::Devices::Midi2::MidiDeclaredEndpointInfo const& value) const;
        [[nodiscard]] auto UserSuppliedInfo() const;
        auto UserSuppliedInfo(winrt::Microsoft::Windows::Devices::Midi2::MidiEndpointUserSuppliedInfo const& value) const;
        [[nodiscard]] auto FunctionBlocks() const;
    };
    template <> struct consume<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfig>
    {
        template <typename D> using type = consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceCreationConfig<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceCreationConfigFactory
    {
        auto CreateInstance(param::hstring const& name, param::hstring const& description, param::hstring const& manufacturer, winrt::Microsoft::Windows::Devices::Midi2::MidiDeclaredEndpointInfo const& declaredEndpointInfo) const;
        auto CreateInstance2(param::hstring const& name, param::hstring const& description, param::hstring const& manufacturer, winrt::Microsoft::Windows::Devices::Midi2::MidiDeclaredEndpointInfo const& declaredEndpointInfo, winrt::Microsoft::Windows::Devices::Midi2::MidiDeclaredDeviceIdentity const& declaredDeviceIdentity) const;
        auto CreateInstance3(param::hstring const& name, param::hstring const& description, param::hstring const& manufacturer, winrt::Microsoft::Windows::Devices::Midi2::MidiDeclaredEndpointInfo const& declaredEndpointInfo, winrt::Microsoft::Windows::Devices::Midi2::MidiDeclaredDeviceIdentity const& declaredDeviceIdentity, winrt::Microsoft::Windows::Devices::Midi2::MidiEndpointUserSuppliedInfo const& userSuppliedInfo) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceCreationConfigFactory>
    {
        template <typename D> using type = consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceCreationConfigFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceManager
    {
    };
    template <> struct consume<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManager>
    {
        template <typename D> using type = consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceManager<D>;
    };
    template <typename D>
    struct consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceManagerStatics
    {
        [[nodiscard]] auto IsTransportAvailable() const;
        [[nodiscard]] auto AbstractionId() const;
        auto CreateVirtualDevice(winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiVirtualDeviceCreationConfig const& creationConfig) const;
    };
    template <> struct consume<winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::IMidiVirtualDeviceManagerStatics>
    {
        template <typename D> using type = consume_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_IMidiVirtualDeviceManagerStatics<D>;
    };
    struct struct_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_MidiStreamConfigRequestedSettings
    {
        uint8_t SpecificationVersionMajor;
        uint8_t SpecificationVersionMinor;
        int32_t PreferredMidiProtocol;
        bool RequestEndpointTransmitJitterReductionTimestamps;
        bool RequestEndpointReceiveJitterReductionTimestamps;
    };
    template <> struct abi<Microsoft::Windows::Devices::Midi2::Endpoints::Virtual::MidiStreamConfigRequestedSettings>
    {
        using type = struct_Microsoft_Windows_Devices_Midi2_Endpoints_Virtual_MidiStreamConfigRequestedSettings;
    };
}
#endif
