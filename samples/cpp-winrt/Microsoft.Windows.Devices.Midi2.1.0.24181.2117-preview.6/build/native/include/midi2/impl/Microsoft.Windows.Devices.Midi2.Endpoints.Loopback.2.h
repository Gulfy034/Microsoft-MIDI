// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Windows_Devices_Midi2_Endpoints_Loopback_2_H
#define WINRT_Microsoft_Windows_Devices_Midi2_Endpoints_Loopback_2_H
#include "winrt/impl/Microsoft.Windows.Devices.Midi2.ServiceConfig.2.h"
#include "winrt/impl/Microsoft.Windows.Devices.Midi2.Endpoints.Loopback.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback
{
    struct MidiLoopbackEndpointCreationResult
    {
        bool Success;
        winrt::guid AssociationId;
        hstring EndpointDeviceIdA;
        hstring EndpointDeviceIdB;
    };
    inline bool operator==(MidiLoopbackEndpointCreationResult const& left, MidiLoopbackEndpointCreationResult const& right) noexcept
    {
        return left.Success == right.Success && left.AssociationId == right.AssociationId && left.EndpointDeviceIdA == right.EndpointDeviceIdA && left.EndpointDeviceIdB == right.EndpointDeviceIdB;
    }
    inline bool operator!=(MidiLoopbackEndpointCreationResult const& left, MidiLoopbackEndpointCreationResult const& right) noexcept
    {
        return !(left == right);
    }
    struct MidiLoopbackEndpointDefinition
    {
        hstring Name;
        hstring UniqueId;
        hstring Description;
    };
    inline bool operator==(MidiLoopbackEndpointDefinition const& left, MidiLoopbackEndpointDefinition const& right) noexcept
    {
        return left.Name == right.Name && left.UniqueId == right.UniqueId && left.Description == right.Description;
    }
    inline bool operator!=(MidiLoopbackEndpointDefinition const& left, MidiLoopbackEndpointDefinition const& right) noexcept
    {
        return !(left == right);
    }
    struct WINRT_IMPL_EMPTY_BASES MidiLoopbackEndpointCreationConfig : winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::IMidiLoopbackEndpointCreationConfig,
        impl::require<MidiLoopbackEndpointCreationConfig, winrt::Microsoft::Windows::Devices::Midi2::ServiceConfig::IMidiServiceTransportPluginConfig>
    {
        MidiLoopbackEndpointCreationConfig(std::nullptr_t) noexcept {}
        MidiLoopbackEndpointCreationConfig(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::IMidiLoopbackEndpointCreationConfig(ptr, take_ownership_from_abi) {}
        MidiLoopbackEndpointCreationConfig();
        MidiLoopbackEndpointCreationConfig(winrt::guid const& associationId, winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::MidiLoopbackEndpointDefinition const& endpointDefinitionA, winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::MidiLoopbackEndpointDefinition const& endpointDefinitionB);
    };
    struct WINRT_IMPL_EMPTY_BASES MidiLoopbackEndpointDeletionConfig : winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::IMidiLoopbackEndpointDeletionConfig,
        impl::require<MidiLoopbackEndpointDeletionConfig, winrt::Microsoft::Windows::Devices::Midi2::ServiceConfig::IMidiServiceTransportPluginConfig>
    {
        MidiLoopbackEndpointDeletionConfig(std::nullptr_t) noexcept {}
        MidiLoopbackEndpointDeletionConfig(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::IMidiLoopbackEndpointDeletionConfig(ptr, take_ownership_from_abi) {}
        explicit MidiLoopbackEndpointDeletionConfig(winrt::guid const& associationId);
    };
    struct WINRT_IMPL_EMPTY_BASES MidiLoopbackEndpointManager : winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::IMidiLoopbackEndpointManager
    {
        MidiLoopbackEndpointManager(std::nullptr_t) noexcept {}
        MidiLoopbackEndpointManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::IMidiLoopbackEndpointManager(ptr, take_ownership_from_abi) {}
        [[nodiscard]] static auto IsTransportAvailable();
        [[nodiscard]] static auto AbstractionId();
        static auto CreateTransientLoopbackEndpoints(winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::MidiLoopbackEndpointCreationConfig const& creationConfig);
        static auto RemoveTransientLoopbackEndpoints(winrt::Microsoft::Windows::Devices::Midi2::Endpoints::Loopback::MidiLoopbackEndpointDeletionConfig const& deletionConfig);
    };
}
#endif
