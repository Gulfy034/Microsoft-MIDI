// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Microsoft_Windows_Devices_Midi2_CapabilityInquiry_1_H
#define WINRT_Microsoft_Windows_Devices_Midi2_CapabilityInquiry_1_H
#include "winrt/impl/Microsoft.Windows.Devices.Midi2.CapabilityInquiry.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Windows::Devices::Midi2::CapabilityInquiry
{
    struct WINRT_IMPL_EMPTY_BASES IMidiUniqueId :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMidiUniqueId>
    {
        IMidiUniqueId(std::nullptr_t = nullptr) noexcept {}
        IMidiUniqueId(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMidiUniqueIdFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMidiUniqueIdFactory>
    {
        IMidiUniqueIdFactory(std::nullptr_t = nullptr) noexcept {}
        IMidiUniqueIdFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMidiUniqueIdStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMidiUniqueIdStatics>
    {
        IMidiUniqueIdStatics(std::nullptr_t = nullptr) noexcept {}
        IMidiUniqueIdStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
