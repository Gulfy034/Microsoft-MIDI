// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

#include "namespace_defines.h"
#include "midl_defines.h"
MIDI_IDL_IMPORT

import "IMidiUniversalPacket.idl";
import "MidiMessage32.idl";
import "MidiMessage64.idl";

import "MidiGroup.idl";

import "Midi1ChannelVoiceMessageStatusEnum.idl";
import "Midi2ChannelVoiceMessageStatusEnum.idl";


namespace MIDI_MIDL_NAMESPACE
{
    MIDI_API_CONTRACT_v1
    static runtimeclass MidiMessageConverter
    {
        static MidiMessage32 ConvertMidi1Message(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            UInt8 statusByte
        );

        static MidiMessage32 ConvertMidi1Message(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            UInt8 statusByte,
            UInt8 dataByte1
        );

        static MidiMessage32 ConvertMidi1Message(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            UInt8 statusByte,
            UInt8 dataByte1,
            UInt8 dataByte2
        );


        static MidiMessage32 ConvertMidi1ChannelPressureMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiChannelPressureMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1NoteOffMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiNoteOffMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1NoteOnMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiNoteOnMessage originalMessage);

        static MidiMessage32 ConvertMidi1PitchBendChangeMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiPitchBendChangeMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1PolyphonicKeyPressureMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiPolyphonicKeyPressureMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1ProgramChangeMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiProgramChangeMessage originalMessage
        );


        static MidiMessage32 ConvertMidi1TimeCodeMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiTimeCodeMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1SongPositionPointerMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiSongPositionPointerMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1SongSelectMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiSongSelectMessage originalMessage
        );


        static MidiMessage32 ConvertMidi1TuneRequestMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiTuneRequestMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1TimingClockMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiTimingClockMessage originalMessage
        );


        static MidiMessage32 ConvertMidi1StartMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiStartMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1ContinueMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiContinueMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1StopMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiStopMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1ActiveSensingMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiActiveSensingMessage originalMessage
        );

        static MidiMessage32 ConvertMidi1SystemResetMessage(
            MIDI_TIMESTAMP timestamp,
            MidiGroup group,
            Windows.Devices.Midi.MidiSystemResetMessage originalMessage
        );
    };
}