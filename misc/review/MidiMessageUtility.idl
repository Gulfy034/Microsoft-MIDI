// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

#include "namespace_defines.h"
#include "midl_defines.h"
MIDI_IDL_IMPORT

import "MidiMessageTypeEnum.idl";
import "MidiPacketTypeEnum.idl";
import "MidiGroup.idl";
import "MidiChannel.idl";

import "IMidiUniversalPacket.idl";

import "Midi1ChannelVoiceMessageStatusEnum.idl";
import "Midi2ChannelVoiceMessageStatusEnum.idl";

namespace MIDI_MIDL_NAMESPACE
{
    MIDI_API_CONTRACT_v1
    static runtimeclass MidiMessageUtility
    {
        static Boolean ValidateMessage32MessageType(UInt32 word0);
        static Boolean ValidateMessage64MessageType(UInt32 word0);
        static Boolean ValidateMessage96MessageType(UInt32 word0);
        static Boolean ValidateMessage128MessageType(UInt32 word0);

        static MidiMessageType GetMessageTypeFromMessageFirstWord(UInt32 word0);
        static MidiPacketType GetPacketTypeFromMessageFirstWord(UInt32 word0);

        static Boolean MessageTypeHasGroupField(MidiMessageType messageType);
        static UInt32 ReplaceGroupInMessageFirstWord(UInt32 word0, MidiGroup newGroup);
        static MidiGroup GetGroupFromMessageFirstWord(UInt32 word0);

        static UInt8 GetStatusFromUtilityMessage(UInt32 word0);
        static Midi1ChannelVoiceMessageStatus GetStatusFromMidi1ChannelVoiceMessage(UInt32 word0);
        static Midi2ChannelVoiceMessageStatus GetStatusFromMidi2ChannelVoiceMessageFirstWord(UInt32 word0);
        

        static UInt8 GetStatusBankFromFlexDataMessageFirstWord(UInt32 word0);
        static UInt8 GetStatusFromFlexDataMessageFirstWord(UInt32 word0);

        static UInt8 GetStatusFromSystemCommonMessage(UInt32 word0);

        static UInt8 GetStatusFromDataMessage64FirstWord(UInt32 word0);
        static UInt8 GetNumberOfBytesFromDataMessage64FirstWord(UInt32 word0);

        static UInt8 GetStatusFromDataMessage128FirstWord(UInt32 word0);
        static UInt8 GetNumberOfBytesFromDataMessage128FirstWord(UInt32 word0);


        static Boolean MessageTypeHasChannelField(MidiMessageType messageType);
        static UInt32 ReplaceChannelInMessageFirstWord(UInt32 word0, MidiChannel newChannel);
        static MidiChannel GetChannelFromMessageFirstWord(UInt32 word0);

        static UInt8 GetFormFromStreamMessageFirstWord(UInt32 word0);
        static UInt16 GetStatusFromStreamMessageFirstWord(UInt32 word0);


        static String GetMessageFriendlyNameFromFirstWord(UInt32 word0);


        static IVector<IMidiUniversalPacket> GetPacketListFromWordList(MIDI_TIMESTAMP timestamp, IIterable<UInt32> words);
        static IVector<UInt32> GetWordListFromPacketList(IIterable<IMidiUniversalPacket> words);
    };
}
